{"ast":null,"code":"import _slicedToArray from \"/Users/christophecaillet/Dev_local/React/grandcompte/leospa-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christophecaillet/Dev_local/React/grandcompte/leospa-main/src/Layouts/Pages/Gestion.js\";\nimport React, { useState, Fragment, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"../../firebase\";\n\nfunction useQuery() {\n  const _useLocation = useLocation(),\n        search = _useLocation.search;\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nconst Gestion = props => {\n  const _useAuthState = useAuthState(auth),\n        _useAuthState2 = _slicedToArray(_useAuthState, 3),\n        user = _useAuthState2[0],\n        loading = _useAuthState2[1],\n        error = _useAuthState2[2];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        userLogged = _useState2[0],\n        setUserLogged = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        compte = _useState4[0],\n        setCompte = _useState4[1];\n\n  let query = useQuery();\n  let location = useLocation();\n  const db = getDatabase();\n  const history = useHistory();\n  useEffect(() => {\n    auth.onAuthStateChanged(function (user) {\n      setUserLogged(user);\n\n      if (true) {\n        const prospectRef = ref(db, \"prospect/\" + user.uid);\n        onValue(prospectRef, snapshot => {\n          const data = snapshot.val();\n          console.log(\"data\", data);\n          setCompte(data.accountNumber);\n        });\n      }\n    });\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"gestion\");\n};\n\nexport default Gestion;","map":{"version":3,"sources":["/Users/christophecaillet/Dev_local/React/grandcompte/leospa-main/src/Layouts/Pages/Gestion.js"],"names":["React","useState","Fragment","useEffect","useLocation","useHistory","getDatabase","ref","onValue","useAuthState","auth","useQuery","search","useMemo","URLSearchParams","Gestion","props","user","loading","error","userLogged","setUserLogged","compte","setCompte","query","location","db","history","onAuthStateChanged","prospectRef","uid","snapshot","data","val","console","log","accountNumber"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,OAA3B,QAA0C,mBAA1C;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,IAAT,QAAqB,gBAArB;;AAEA,SAASC,QAAT,GAAoB;AAAA,uBACCP,WAAW,EADZ;AAAA,QACVQ,MADU,gBACVA,MADU;;AAGlB,SAAOZ,KAAK,CAACa,OAAN,CAAc,MAAM,IAAIC,eAAJ,CAAoBF,MAApB,CAApB,EAAiD,CAACA,MAAD,CAAjD,CAAP;AACD;;AAED,MAAMG,OAAO,GAAIC,KAAD,IAAW;AAAA,wBACMP,YAAY,CAACC,IAAD,CADlB;AAAA;AAAA,QAClBO,IADkB;AAAA,QACZC,OADY;AAAA,QACHC,KADG;;AAAA,oBAEWlB,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA,QAElBmB,UAFkB;AAAA,QAENC,aAFM;;AAAA,qBAGGpB,QAAQ,CAAC,KAAD,CAHX;AAAA;AAAA,QAGlBqB,MAHkB;AAAA,QAGVC,SAHU;;AAIzB,MAAIC,KAAK,GAAGb,QAAQ,EAApB;AACA,MAAIc,QAAQ,GAAGrB,WAAW,EAA1B;AACA,QAAMsB,EAAE,GAAGpB,WAAW,EAAtB;AACA,QAAMqB,OAAO,GAAGtB,UAAU,EAA1B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,IAAI,CAACkB,kBAAL,CAAwB,UAAUX,IAAV,EAAgB;AACtCI,MAAAA,aAAa,CAACJ,IAAD,CAAb;;AACA,UAAI,IAAJ,EAAU;AACR,cAAMY,WAAW,GAAGtB,GAAG,CAACmB,EAAD,EAAK,cAAcT,IAAI,CAACa,GAAxB,CAAvB;AACAtB,QAAAA,OAAO,CAACqB,WAAD,EAAeE,QAAD,IAAc;AACjC,gBAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AACAT,UAAAA,SAAS,CAACS,IAAI,CAACI,aAAN,CAAT;AACD,SAJM,CAAP;AAKD;AACF,KAVD;AAWD,GAZQ,EAYN,EAZM,CAAT;AAaA,SAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,CAtBD;;AAwBA,eAAerB,OAAf","sourcesContent":["import React, { useState, Fragment, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"../../firebase\";\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nconst Gestion = (props) => {\n  const [user, loading, error] = useAuthState(auth);\n  const [userLogged, setUserLogged] = useState(false);\n  const [compte, setCompte] = useState(false);\n  let query = useQuery();\n  let location = useLocation();\n  const db = getDatabase();\n  const history = useHistory();\n  useEffect(() => {\n    auth.onAuthStateChanged(function (user) {\n      setUserLogged(user);\n      if (true) {\n        const prospectRef = ref(db, \"prospect/\" + user.uid);\n        onValue(prospectRef, (snapshot) => {\n          const data = snapshot.val();\n          console.log(\"data\", data);\n          setCompte(data.accountNumber);\n        });\n      }\n    });\n  }, []);\n  return <Fragment>gestion</Fragment>;\n};\n\nexport default Gestion;\n"]},"metadata":{},"sourceType":"module"}