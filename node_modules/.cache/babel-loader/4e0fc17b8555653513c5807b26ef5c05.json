{"ast":null,"code":"import _slicedToArray from \"/Users/christophecaillet/Dev_local/React/grandcompte/leospa-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christophecaillet/Dev_local/React/grandcompte/leospa-main/src/Layouts/Pages/MarketPlace.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Procedure from \"../../Sections/Procedure\";\nimport Appointment from \"../../Sections/Appointment\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MarketPlace = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const history = useHistory();\n  useEffect(() => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        setUser(user);\n      } else {\n        // No user is signed in.\n        setUser(null);\n      }\n    });\n    const auth = getAuth();\n    const user = auth.currentUser;\n\n    if (user !== null) {\n      const uid = user.uid;\n      const db = getDatabase();\n      const usersRef = ref(db, \"users/\" + uid);\n      onValue(usersRef, snapshot => {\n        const data = snapshot.val();\n        console.log(\"data\", data);\n\n        if (data && data.type && (data.type == \"admin\" || data.type == \"commercial\")) {\n          console.log(\"admin\");\n        } else {\n          history.push(\"/\");\n        }\n      });\n    } else {\n      history.push(\"/\");\n    }\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Procedure, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Appointment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nexport default MarketPlace;","map":{"version":3,"sources":["/Users/christophecaillet/Dev_local/React/grandcompte/leospa-main/src/Layouts/Pages/MarketPlace.js"],"names":["React","Fragment","useEffect","useState","Procedure","Appointment","getDatabase","ref","onValue","getAuth","useHistory","MarketPlace","props","user","setUser","history","auth","onAuthStateChanged","currentUser","uid","db","usersRef","snapshot","data","val","console","log","type","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,OAA3B,QAA0C,mBAA1C;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA,oBACLT,QAAQ,CAAC,IAAD,CADH;AAAA;AAAA,QACtBU,IADsB;AAAA,QAChBC,OADgB;;AAE7B,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,IAAI,CAACC,kBAAL,CAAwB,UAAUJ,IAAV,EAAgB;AACtC,UAAIA,IAAJ,EAAU;AACR;AACAC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAHD,MAGO;AACL;AACAC,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KARD;AASA,UAAME,IAAI,GAAGP,OAAO,EAApB;AACA,UAAMI,IAAI,GAAGG,IAAI,CAACE,WAAlB;;AACA,QAAIL,IAAI,KAAK,IAAb,EAAmB;AACjB,YAAMM,GAAG,GAAGN,IAAI,CAACM,GAAjB;AACA,YAAMC,EAAE,GAAGd,WAAW,EAAtB;AACA,YAAMe,QAAQ,GAAGd,GAAG,CAACa,EAAD,EAAK,WAAWD,GAAhB,CAApB;AACAX,MAAAA,OAAO,CAACa,QAAD,EAAYC,QAAD,IAAc;AAC9B,cAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;;AACA,YACEA,IAAI,IACJA,IAAI,CAACI,IADL,KAECJ,IAAI,CAACI,IAAL,IAAa,OAAb,IAAwBJ,IAAI,CAACI,IAAL,IAAa,YAFtC,CADF,EAIE;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,SAND,MAMO;AACLX,UAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD;AACF,OAZM,CAAP;AAaD,KAjBD,MAiBO;AACLb,MAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD;AACF,GAhCQ,EAgCN,EAhCM,CAAT;AAiCA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA3CD;;AA6CA,eAAejB,WAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport Procedure from \"../../Sections/Procedure\";\nimport Appointment from \"../../Sections/Appointment\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MarketPlace = (props) => {\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        setUser(user);\n      } else {\n        // No user is signed in.\n        setUser(null);\n      }\n    });\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if (user !== null) {\n      const uid = user.uid;\n      const db = getDatabase();\n      const usersRef = ref(db, \"users/\" + uid);\n      onValue(usersRef, (snapshot) => {\n        const data = snapshot.val();\n        console.log(\"data\", data);\n        if (\n          data &&\n          data.type &&\n          (data.type == \"admin\" || data.type == \"commercial\")\n        ) {\n          console.log(\"admin\");\n        } else {\n          history.push(\"/\");\n        }\n      });\n    } else {\n      history.push(\"/\");\n    }\n  }, []);\n  return (\n    <Fragment>\n      <Procedure />\n      <Appointment />\n    </Fragment>\n  );\n};\n\nexport default MarketPlace;\n"]},"metadata":{},"sourceType":"module"}