{"ast":null,"code":"var _jsxFileName = \"/Users/christophecaillet/Dev_local/React/grandcompte/leospa-main/src/Layouts/Pages/MarketPlace.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport Procedure from \"../../Sections/Procedure\";\nimport Appointment from \"../../Sections/Appointment\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\n\nconst MarketPlace = props => {\n  useEffect(() => {\n    const auth = getAuth();\n    const user = auth.currentUser;\n\n    if (user !== null) {\n      // The user object has basic properties such as display name, email, etc.\n      const displayName = user.displayName;\n      const email = user.email;\n      const photoURL = user.photoURL;\n      const emailVerified = user.emailVerified; // The user's ID, unique to the Firebase project. Do NOT use\n      // this value to authenticate with your backend server, if\n      // you have one. Use User.getToken() instead.\n\n      const uid = user.uid;\n      console.log(\"email\", email);\n    }\n\n    const db = getDatabase();\n    const starCountRef = ref(db, \"annulations/\");\n    onValue(starCountRef, snapshot => {\n      const data = snapshot.val();\n      console.log(\"data\", data);\n    });\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Procedure, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Appointment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default MarketPlace;","map":{"version":3,"sources":["/Users/christophecaillet/Dev_local/React/grandcompte/leospa-main/src/Layouts/Pages/MarketPlace.js"],"names":["React","Fragment","useEffect","Procedure","Appointment","getDatabase","ref","onValue","getAuth","MarketPlace","props","auth","user","currentUser","displayName","email","photoURL","emailVerified","uid","console","log","db","starCountRef","snapshot","data","val"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,OAA3B,QAA0C,mBAA1C;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,IAAI,GAAGH,OAAO,EAApB;AACA,UAAMI,IAAI,GAAGD,IAAI,CAACE,WAAlB;;AACA,QAAID,IAAI,KAAK,IAAb,EAAmB;AACjB;AACA,YAAME,WAAW,GAAGF,IAAI,CAACE,WAAzB;AACA,YAAMC,KAAK,GAAGH,IAAI,CAACG,KAAnB;AACA,YAAMC,QAAQ,GAAGJ,IAAI,CAACI,QAAtB;AACA,YAAMC,aAAa,GAAGL,IAAI,CAACK,aAA3B,CALiB,CAOjB;AACA;AACA;;AACA,YAAMC,GAAG,GAAGN,IAAI,CAACM,GAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB;AACD;;AACD,UAAMM,EAAE,GAAGhB,WAAW,EAAtB;AACA,UAAMiB,YAAY,GAAGhB,GAAG,CAACe,EAAD,EAAK,cAAL,CAAxB;AACAd,IAAAA,OAAO,CAACe,YAAD,EAAgBC,QAAD,IAAc;AAClC,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,IAApB;AACD,KAHM,CAAP;AAID,GAtBQ,EAsBN,EAtBM,CAAT;AAuBA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA9BD;;AAgCA,eAAef,WAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport Procedure from \"../../Sections/Procedure\";\nimport Appointment from \"../../Sections/Appointment\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\n\nconst MarketPlace = (props) => {\n  useEffect(() => {\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if (user !== null) {\n      // The user object has basic properties such as display name, email, etc.\n      const displayName = user.displayName;\n      const email = user.email;\n      const photoURL = user.photoURL;\n      const emailVerified = user.emailVerified;\n\n      // The user's ID, unique to the Firebase project. Do NOT use\n      // this value to authenticate with your backend server, if\n      // you have one. Use User.getToken() instead.\n      const uid = user.uid;\n      console.log(\"email\", email);\n    }\n    const db = getDatabase();\n    const starCountRef = ref(db, \"annulations/\");\n    onValue(starCountRef, (snapshot) => {\n      const data = snapshot.val();\n      console.log(\"data\", data);\n    });\n  }, []);\n  return (\n    <Fragment>\n      <Procedure />\n      <Appointment />\n    </Fragment>\n  );\n};\n\nexport default MarketPlace;\n"]},"metadata":{},"sourceType":"module"}